package com.bootdo.review.controller;

import java.util.List;
import java.util.Map;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.bootdo.common.utils.PageUtils;
import com.bootdo.common.utils.Query;
import com.bootdo.common.utils.R;
import com.bootdo.review.domain.AuthenticationDO;
import com.bootdo.review.service.AuthenticationService;

/**
 * 
 * 
 * @author lz
 * @email 1992lcg@163.com
 * @date 2018-07-12 14:17:28
 */
 
@Controller
@RequestMapping("/review/authentication")
public class AuthenticationController {
	@Autowired
	private AuthenticationService authenticationService;
	
	@GetMapping()
	@RequiresPermissions("review:authentication:authentication")
	String Authentication(){
	    return "review/authentication/authentication";
	}
	
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("review:authentication:authentication")
	public PageUtils list(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);
		List<AuthenticationDO> authenticationList = authenticationService.list(query);
		int total = authenticationService.count(query);
		PageUtils pageUtils = new PageUtils(authenticationList, total);
		return pageUtils;
	}
	
	@GetMapping("/add")
	@RequiresPermissions("review:authentication:add")
	String add(){
	    return "review/authentication/add";
	}

	@GetMapping("/edit/{id}")
	@RequiresPermissions("review:authentication:edit")
	String edit(@PathVariable("id") Long id,Model model){
		AuthenticationDO authentication = authenticationService.get(id);
		model.addAttribute("authentication", authentication);
	    return "review/authentication/edit";
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("review:authentication:add")
	public R save( AuthenticationDO authentication){
		if(authenticationService.save(authentication)>0){
			return R.ok();
		}
		return R.error();
	}
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("review:authentication:edit")
	public R update( AuthenticationDO authentication){
		authenticationService.update(authentication);
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("review:authentication:remove")
	public R remove( Long id){
		if(authenticationService.remove(id)>0){
		return R.ok();
		}
		return R.error();
	}
	
	/**
	 * 审核
	 */
	@PostMapping( "/batchPass")
	@ResponseBody
	@RequiresPermissions("review:authentication:pass")
	public R remove(@RequestParam("users[]") Long[] users, @RequestParam("status") String status, @RequestParam("userstatus") String userstatus){
		authenticationService.batchPass(users, status, userstatus);
		return R.ok();
	}
}
