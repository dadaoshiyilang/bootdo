package com.bootdo.sensation.controller;

import java.util.List;
import java.util.Map;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.bootdo.common.controller.BaseController;
import com.bootdo.common.utils.PageUtils;
import com.bootdo.common.utils.Query;
import com.bootdo.common.utils.R;
import com.bootdo.sensation.domain.OnlineSensationDO;
import com.bootdo.sensation.service.OnlineSensationService;

/**
 * 网红公司信息表
 * 
 * @author chglee
 * @email 1992lcg@163.com
 * @date 2018-07-18 10:52:52
 */
 
@Controller
@RequestMapping("/sensation/onlineSensation")
public class OnlineSensationController extends BaseController {
	
	@Autowired
	private OnlineSensationService onlineSensationService;
	
	@GetMapping()
	@RequiresPermissions("sensation:onlineSensation:onlineSensation")
	String OnlineSensation(Model model){
		model.addAttribute("whid", getWhid());
	    return "sensation/onlineSensation/onlineSensation";
	}
	
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("sensation:onlineSensation:onlineSensation")
	public PageUtils list(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);
		List<OnlineSensationDO> onlineSensationList = onlineSensationService.list(query);
		int total = onlineSensationService.count(query);
		PageUtils pageUtils = new PageUtils(onlineSensationList, total);
		return pageUtils;
	}
	
	@GetMapping("/add")
	@RequiresPermissions("sensation:onlineSensation:add")
	String add(){
	    return "sensation/onlineSensation/add";
	}

	@GetMapping("/edit/{id}")
	@RequiresPermissions("sensation:onlineSensation:edit")
	String edit(@PathVariable("id") Long id,Model model){
		OnlineSensationDO onlineSensation = onlineSensationService.get(id);
		model.addAttribute("onlineSensation", onlineSensation);
	    return "sensation/onlineSensation/edit";
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("sensation:onlineSensation:add")
	public R save( OnlineSensationDO onlineSensation){
		
		if(onlineSensationService.save(onlineSensation)>0){
			return R.ok();
		}
		return R.error();
	}
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("sensation:onlineSensation:edit")
	public R update( OnlineSensationDO onlineSensation){
		onlineSensationService.update(onlineSensation);
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("sensation:onlineSensation:remove")
	public R remove( Long id){
		if(onlineSensationService.remove(id)>0){
		return R.ok();
		}
		return R.error();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/batchRemove")
	@ResponseBody
	@RequiresPermissions("sensation:onlineSensation:batchRemove")
	public R remove(@RequestParam("ids[]") Long[] ids){
		onlineSensationService.batchRemove(ids);
		return R.ok();
	}
	
	@GetMapping("/view/{whid}")
	@RequiresPermissions("sensation:onlineSensation:view")
	String view(@PathVariable("whid") Long whid,RedirectAttributes attr){
		attr.addFlashAttribute("whid", whid);
	    return "redirect:/statsensation/sensationDaily";
	}
	
}
